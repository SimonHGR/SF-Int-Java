package simplegenerics;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

public class UseAList {
  public static void main(String[] args) {
    String [] nameArray = new String[3];
    nameArray[0] = "Albert";
    System.out.println(nameArray);
    System.out.println(Arrays.toString(nameArray));
    System.out.println("----------------");
//    List names = new ArrayList();
//    List<int> nums; // NOPE, only object / reference types allowed
//    List<String> names = new ArrayList();
    List<String> names = new LinkedList();
    names.add("Fred");
    names.add("Jim");
    System.out.println(names);
//    Object n1 = names.get(0);
//    String n1 = (String)names.get(0);
    String n1 = names.get(0); // cast is generated by the compiler
//    names.add(LocalDate.now()); // oops, it's "heterogeneous" can contain anything!
//    System.out.println(names);

    // java has 8 "primitive" types: boolean, byte, short, char, int, long, float, double
    // cannot use primitives with generics (but can autobox/unbox)
//    names.add(1); // autoboxing
//    Object obj = names.get(3);
//    System.out.println(obj);
//    System.out.println(obj.getClass().getName());
  }
}
